language: go

go:
  - "1.x"
  - "1.15.x"
  - master

os:
  - linux

matrix:
  allow_failures:
    - go: master

cache:
  directories:
    - $HOME/.cache/go-build
    - $HOME/gopath/pkg/mod

env:
  global:
    - GO111MODULE=on

jobs:
  include:
    - stage: "Compile"
      name: "Compile Packages and Dependencies"
      script: go build
    - stage: "Tests"
      name: "Unit Tests"
      script: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
      after_success:
        - bash <(curl -s https://codecov.io/bash)
    - stage: "Lint"
      name: "Code style"
      before_script:
        - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.31.0
      script: golangci-lint run
    - stage: "Vet"
      name: "Correctness"
      script: go vet ./...
    - stage: "Generate"
      name: "All generated objects are up to data"
      script: go generate -x ./... && git diff --exit-code; code=$?; git checkout -- .; (exit $code) # Check that go generate ./... produces a zero diff; clean up any changes afterwards.